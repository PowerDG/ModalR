// <auto-generated />
using System;
using BookService.Host.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookService.Host.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(BookDbContext))]
    [Migration("20190812064035_InitBook_Var")]
    partial class InitBook_Var
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BookService.Host.Domain.Book", b =>
                {
                    b.Property<uint?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasColumnType("VARCHAR(64)")
                        .HasMaxLength(60);

                    b.Property<decimal>("AverageScore")
                        .HasColumnName("average_score");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("create_time");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("creator_user_id");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnName("entry_time");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("LastBookReview")
                        .HasColumnName("last_book_review")
                        .HasColumnType("VARCHAR(254)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modified_time");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("last_modifier_user_id");

                    b.Property<long?>("MemberId")
                        .HasColumnName("member_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(64)")
                        .HasMaxLength(60);

                    b.Property<uint>("NumberOfBookReview")
                        .HasColumnName("number_of_book_review");

                    b.Property<string>("Photo")
                        .HasColumnName("photo");

                    b.Property<string>("PhotoHd")
                        .HasColumnName("photo_hd");

                    b.Property<string>("Resource")
                        .HasColumnName("resource")
                        .HasColumnType("VARCHAR(64)")
                        .HasMaxLength(60);

                    b.Property<byte>("State")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("book");
                });

            modelBuilder.Entity("BookService.Host.Domain.BookReview", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<uint>("BookId")
                        .HasColumnName("book_id");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("create_time");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("creator_user_id");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modified_time");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("last_modifier_user_id");

                    b.Property<string>("Review")
                        .HasColumnName("review")
                        .HasColumnType("VARCHAR(254)")
                        .HasMaxLength(250);

                    b.Property<uint>("Score")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.ToTable("book_review");
                });
#pragma warning restore 612, 618
        }
    }
}
